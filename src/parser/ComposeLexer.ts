// Generated from ComposeLexer.g4 by ANTLR 4.11.2-SNAPSHOT
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class ComposeLexer extends Lexer {
	public static readonly I32 = 1;
	public static readonly I64 = 2;
	public static readonly U32 = 3;
	public static readonly U64 = 4;
	public static readonly F32 = 5;
	public static readonly F64 = 6;
	public static readonly V128 = 7;
	public static readonly STRING = 8;
	public static readonly BOOLEAN = 9;
	public static readonly VOID = 10;
	public static readonly ATTRIBUTE = 11;
	public static readonly ABSTRACT = 12;
	public static readonly CLASS = 13;
	public static readonly EXTENDS = 14;
	public static readonly STATIC = 15;
	public static readonly FUNCTION = 16;
	public static readonly LET = 17;
	public static readonly NEW = 18;
	public static readonly CONST = 19;
	public static readonly RETURN = 20;
	public static readonly IF = 21;
	public static readonly ELSE = 22;
	public static readonly SWITCH = 23;
	public static readonly CASE = 24;
	public static readonly FOR = 25;
	public static readonly DO = 26;
	public static readonly WHILE = 27;
	public static readonly BREAK = 28;
	public static readonly TRY = 29;
	public static readonly CATCH = 30;
	public static readonly FINALLY = 31;
	public static readonly THIS = 32;
	public static readonly SUPER = 33;
	public static readonly TYPE_OF = 34;
	public static readonly INSTANCE_OF = 35;
	public static readonly IN = 36;
	public static readonly AS = 37;
	public static readonly LPAR = 38;
	public static readonly RPAR = 39;
	public static readonly LBRAK = 40;
	public static readonly RBRAK = 41;
	public static readonly LCURL = 42;
	public static readonly RCURL = 43;
	public static readonly ARROW = 44;
	public static readonly GT = 45;
	public static readonly LT = 46;
	public static readonly LTE = 47;
	public static readonly GTE = 48;
	public static readonly EQUALS = 49;
	public static readonly NOT_EQUALS = 50;
	public static readonly NOT = 51;
	public static readonly AND = 52;
	public static readonly OR = 53;
	public static readonly QUESTION = 54;
	public static readonly SEMI = 55;
	public static readonly COLON = 56;
	public static readonly COMMA = 57;
	public static readonly DOT = 58;
	public static readonly AT = 59;
	public static readonly INC = 60;
	public static readonly DEC = 61;
	public static readonly PLUS = 62;
	public static readonly MINUS = 63;
	public static readonly STAR = 64;
	public static readonly SLASH = 65;
	public static readonly BSLASH = 66;
	public static readonly PERCENT = 67;
	public static readonly CARET = 68;
	public static readonly TILDE = 69;
	public static readonly AMP = 70;
	public static readonly PIPE = 71;
	public static readonly LSHIFT = 72;
	public static readonly RSHIFT = 73;
	public static readonly URSHIFT = 74;
	public static readonly ASSIGN = 75;
	public static readonly ADD_ASSIGN = 76;
	public static readonly SUB_ASSIGN = 77;
	public static readonly MUL_ASSIGN = 78;
	public static readonly DIV_ASSIGN = 79;
	public static readonly AND_ASSIGN = 80;
	public static readonly OR_ASSIGN = 81;
	public static readonly XOR_ASSIGN = 82;
	public static readonly MOD_ASSIGN = 83;
	public static readonly LSHIFT_ASSIGN = 84;
	public static readonly RSHIFT_ASSIGN = 85;
	public static readonly URSHIFT_ASSIGN = 86;
	public static readonly INTEGER_LITERAL = 87;
	public static readonly DECIMAL_LITERAL = 88;
	public static readonly BOOLEAN_LITERAL = 89;
	public static readonly CHAR_LITERAL = 90;
	public static readonly STRING_LITERAL = 91;
	public static readonly NULL_LITERAL = 92;
	public static readonly IDENTIFIER = 93;
	public static readonly WS = 94;
	public static readonly COMMENT = 95;
	public static readonly LINE_COMMENT = 96;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: string[] = [ null, "'i32'", "'i64'", 
                                                   "'u32'", "'u64'", "'f32'", 
                                                   "'f64'", "'v128'", "'string'", 
                                                   "'boolean'", "'void'", 
                                                   "'attribute'", "'abstract'", 
                                                   "'class'", "'extends'", 
                                                   "'static'", "'function'", 
                                                   "'let'", "'new'", "'const'", 
                                                   "'return'", "'if'", "'else'", 
                                                   "'switch'", "'case'", 
                                                   "'for'", "'do'", "'while'", 
                                                   "'break'", "'try'", "'catch'", 
                                                   "'finally'", "'this'", 
                                                   "'super'", "'typeof'", 
                                                   "'instanceof'", "'in'", 
                                                   "'as'", "'('", "')'", 
                                                   "'['", "']'", "'{'", 
                                                   "'}'", "'=>'", "'>'", 
                                                   "'<'", "'<='", "'>='", 
                                                   "'=='", "'!='", "'!'", 
                                                   "'&&'", "'||'", "'?'", 
                                                   "';'", "':'", "','", 
                                                   "'.'", "'@'", "'++'", 
                                                   "'--'", "'+'", "'-'", 
                                                   "'*'", "'/'", "'\\'", 
                                                   "'%'", "'^'", "'~'", 
                                                   "'&'", "'|'", "'<<'", 
                                                   "'>>'", "'>>>'", "'='", 
                                                   "'+='", "'-='", "'*='", 
                                                   "'/='", "'&='", "'|='", 
                                                   "'^='", "'%='", "'<<='", 
                                                   "'>>='", "'>>>='", null, 
                                                   null, null, null, null, 
                                                   "'null'" ];
	public static readonly symbolicNames: string[] = [ null, "I32", "I64", 
                                                    "U32", "U64", "F32", 
                                                    "F64", "V128", "STRING", 
                                                    "BOOLEAN", "VOID", "ATTRIBUTE", 
                                                    "ABSTRACT", "CLASS", 
                                                    "EXTENDS", "STATIC", 
                                                    "FUNCTION", "LET", "NEW", 
                                                    "CONST", "RETURN", "IF", 
                                                    "ELSE", "SWITCH", "CASE", 
                                                    "FOR", "DO", "WHILE", 
                                                    "BREAK", "TRY", "CATCH", 
                                                    "FINALLY", "THIS", "SUPER", 
                                                    "TYPE_OF", "INSTANCE_OF", 
                                                    "IN", "AS", "LPAR", 
                                                    "RPAR", "LBRAK", "RBRAK", 
                                                    "LCURL", "RCURL", "ARROW", 
                                                    "GT", "LT", "LTE", "GTE", 
                                                    "EQUALS", "NOT_EQUALS", 
                                                    "NOT", "AND", "OR", 
                                                    "QUESTION", "SEMI", 
                                                    "COLON", "COMMA", "DOT", 
                                                    "AT", "INC", "DEC", 
                                                    "PLUS", "MINUS", "STAR", 
                                                    "SLASH", "BSLASH", "PERCENT", 
                                                    "CARET", "TILDE", "AMP", 
                                                    "PIPE", "LSHIFT", "RSHIFT", 
                                                    "URSHIFT", "ASSIGN", 
                                                    "ADD_ASSIGN", "SUB_ASSIGN", 
                                                    "MUL_ASSIGN", "DIV_ASSIGN", 
                                                    "AND_ASSIGN", "OR_ASSIGN", 
                                                    "XOR_ASSIGN", "MOD_ASSIGN", 
                                                    "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", 
                                                    "URSHIFT_ASSIGN", "INTEGER_LITERAL", 
                                                    "DECIMAL_LITERAL", "BOOLEAN_LITERAL", 
                                                    "CHAR_LITERAL", "STRING_LITERAL", 
                                                    "NULL_LITERAL", "IDENTIFIER", 
                                                    "WS", "COMMENT", "LINE_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"I32", "I64", "U32", "U64", "F32", "F64", "V128", "STRING", "BOOLEAN", 
		"VOID", "ATTRIBUTE", "ABSTRACT", "CLASS", "EXTENDS", "STATIC", "FUNCTION", 
		"LET", "NEW", "CONST", "RETURN", "IF", "ELSE", "SWITCH", "CASE", "FOR", 
		"DO", "WHILE", "BREAK", "TRY", "CATCH", "FINALLY", "THIS", "SUPER", "TYPE_OF", 
		"INSTANCE_OF", "IN", "AS", "LPAR", "RPAR", "LBRAK", "RBRAK", "LCURL", 
		"RCURL", "ARROW", "GT", "LT", "LTE", "GTE", "EQUALS", "NOT_EQUALS", "NOT", 
		"AND", "OR", "QUESTION", "SEMI", "COLON", "COMMA", "DOT", "AT", "INC", 
		"DEC", "PLUS", "MINUS", "STAR", "SLASH", "BSLASH", "PERCENT", "CARET", 
		"TILDE", "AMP", "PIPE", "LSHIFT", "RSHIFT", "URSHIFT", "ASSIGN", "ADD_ASSIGN", 
		"SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", 
		"MOD_ASSIGN", "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", "URSHIFT_ASSIGN", "INTEGER_LITERAL", 
		"DecimalIntegerLiteral", "HexIntegerLiteral", "OctalIntegerLiteral", "BinaryIntegerLiteral", 
		"IntegerTypeSuffix", "DecimalNumeral", "Digits", "Digit", "NonZeroDigit", 
		"DigitsAndUnderscores", "DigitOrUnderscore", "Underscores", "HexNumeral", 
		"HexDigits", "HexDigit", "HexDigitsAndUnderscores", "HexDigitOrUnderscore", 
		"OctalNumeral", "OctalDigits", "OctalDigit", "OctalDigitsAndUnderscores", 
		"OctalDigitOrUnderscore", "BinaryNumeral", "BinaryDigits", "BinaryDigit", 
		"BinaryDigitsAndUnderscores", "BinaryDigitOrUnderscore", "DECIMAL_LITERAL", 
		"DecimalFloatingPointLiteral", "ExponentPart", "ExponentIndicator", "SignedInteger", 
		"Sign", "FloatTypeSuffix", "HexadecimalFloatingPointLiteral", "HexSignificand", 
		"BinaryExponent", "BinaryExponentIndicator", "BOOLEAN_LITERAL", "CHAR_LITERAL", 
		"SingleCharacter", "STRING_LITERAL", "StringCharacters", "StringCharacter", 
		"EscapeSequence", "OctalEscape", "ZeroToThree", "UnicodeEscape", "NULL_LITERAL", 
		"IDENTIFIER", "Letter", "LetterOrDigit", "WS", "COMMENT", "LINE_COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, ComposeLexer._ATN, ComposeLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "ComposeLexer.g4"; }

	public get literalNames(): (string | null)[] { return ComposeLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return ComposeLexer.symbolicNames; }
	public get ruleNames(): string[] { return ComposeLexer.ruleNames; }

	public get serializedATN(): number[] { return ComposeLexer._serializedATN; }

	public get channelNames(): string[] { return ComposeLexer.channelNames; }

	public get modeNames(): string[] { return ComposeLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,96,941,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,
	89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,
	7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,
	2,103,7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
	2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,
	2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,
	2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,
	2,127,7,127,2,128,7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,
	2,133,7,133,2,134,7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,
	2,139,7,139,2,140,7,140,2,141,7,141,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,
	1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,
	1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,
	1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,
	1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,
	13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
	1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,
	17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,
	1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,
	22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,26,
	1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,
	28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
	1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,
	33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
	1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,
	41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,46,1,47,
	1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,51,1,51,1,51,1,52,1,
	52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,
	1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,
	65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,71,1,72,
	1,72,1,72,1,73,1,73,1,73,1,73,1,74,1,74,1,75,1,75,1,75,1,76,1,76,1,76,1,
	77,1,77,1,77,1,78,1,78,1,78,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,
	1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,
	85,1,85,1,86,1,86,1,86,1,86,3,86,627,8,86,1,87,1,87,3,87,631,8,87,1,88,
	1,88,3,88,635,8,88,1,89,1,89,3,89,639,8,89,1,90,1,90,3,90,643,8,90,1,91,
	1,91,1,92,1,92,1,92,3,92,650,8,92,1,92,1,92,1,92,3,92,655,8,92,3,92,657,
	8,92,1,93,1,93,3,93,661,8,93,1,93,3,93,664,8,93,1,94,1,94,3,94,668,8,94,
	1,95,1,95,1,96,4,96,673,8,96,11,96,12,96,674,1,97,1,97,3,97,679,8,97,1,
	98,4,98,682,8,98,11,98,12,98,683,1,99,1,99,1,99,1,99,1,100,1,100,3,100,
	692,8,100,1,100,3,100,695,8,100,1,101,1,101,1,102,4,102,700,8,102,11,102,
	12,102,701,1,103,1,103,3,103,706,8,103,1,104,1,104,3,104,710,8,104,1,104,
	1,104,1,105,1,105,3,105,716,8,105,1,105,3,105,719,8,105,1,106,1,106,1,107,
	4,107,724,8,107,11,107,12,107,725,1,108,1,108,3,108,730,8,108,1,109,1,109,
	1,109,1,109,1,110,1,110,3,110,738,8,110,1,110,3,110,741,8,110,1,111,1,111,
	1,112,4,112,746,8,112,11,112,12,112,747,1,113,1,113,3,113,752,8,113,1,114,
	1,114,3,114,756,8,114,1,115,1,115,1,115,3,115,761,8,115,1,115,3,115,764,
	8,115,1,115,3,115,767,8,115,1,115,1,115,1,115,3,115,772,8,115,1,115,3,115,
	775,8,115,1,115,1,115,1,115,3,115,780,8,115,1,115,1,115,1,115,3,115,785,
	8,115,1,116,1,116,1,116,1,117,1,117,1,118,3,118,793,8,118,1,118,1,118,1,
	119,1,119,1,120,1,120,1,121,1,121,1,121,3,121,804,8,121,1,122,1,122,3,122,
	808,8,122,1,122,1,122,1,122,3,122,813,8,122,1,122,1,122,3,122,817,8,122,
	1,123,1,123,1,123,1,124,1,124,1,125,1,125,1,125,1,125,1,125,1,125,1,125,
	1,125,1,125,3,125,833,8,125,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,
	126,3,126,843,8,126,1,127,1,127,1,128,1,128,3,128,849,8,128,1,128,1,128,
	1,129,4,129,854,8,129,11,129,12,129,855,1,130,1,130,3,130,860,8,130,1,131,
	1,131,1,131,1,131,3,131,866,8,131,1,132,1,132,1,132,1,132,1,132,1,132,1,
	132,1,132,1,132,1,132,1,132,3,132,879,8,132,1,133,1,133,1,134,1,134,4,134,
	885,8,134,11,134,12,134,886,1,134,1,134,1,134,1,134,1,134,1,135,1,135,1,
	135,1,135,1,135,1,136,1,136,5,136,901,8,136,10,136,12,136,904,9,136,1,137,
	1,137,1,138,1,138,1,139,4,139,911,8,139,11,139,12,139,912,1,139,1,139,1,
	140,1,140,1,140,1,140,5,140,921,8,140,10,140,12,140,924,9,140,1,140,1,140,
	1,140,1,140,1,140,1,141,1,141,1,141,1,141,5,141,935,8,141,10,141,12,141,
	938,9,141,1,141,1,141,1,922,0,142,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
	9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
	21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
	33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
	45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,
	56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,
	133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,
	77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,
	175,0,177,0,179,0,181,0,183,0,185,0,187,0,189,0,191,0,193,0,195,0,197,0,
	199,0,201,0,203,0,205,0,207,0,209,0,211,0,213,0,215,0,217,0,219,0,221,0,
	223,0,225,0,227,0,229,88,231,0,233,0,235,0,237,0,239,0,241,0,243,0,245,
	0,247,0,249,0,251,89,253,90,255,0,257,91,259,0,261,0,263,0,265,0,267,0,
	269,0,271,92,273,93,275,0,277,0,279,94,281,95,283,96,1,0,19,2,0,76,76,108,
	108,1,0,49,57,2,0,88,88,120,120,3,0,48,57,65,70,97,102,1,0,48,55,2,0,66,
	66,98,98,1,0,48,49,2,0,69,69,101,101,2,0,43,43,45,45,4,0,68,68,70,70,100,
	100,102,102,2,0,80,80,112,112,4,0,10,10,13,13,39,39,92,92,4,0,10,10,13,
	13,34,34,92,92,8,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,
	116,1,0,48,51,4,0,36,36,65,90,95,95,97,122,5,0,36,36,48,57,65,90,95,95,
	97,122,3,0,9,10,12,13,32,32,2,0,10,10,13,13,952,0,1,1,0,0,0,0,3,1,0,0,0,
	0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
	0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
	27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
	0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
	49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,
	0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,
	71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
	0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,
	93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
	0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
	0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,
	0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,
	0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,
	145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,
	1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,
	0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,229,1,0,
	0,0,0,251,1,0,0,0,0,253,1,0,0,0,0,257,1,0,0,0,0,271,1,0,0,0,0,273,1,0,0,
	0,0,279,1,0,0,0,0,281,1,0,0,0,0,283,1,0,0,0,1,285,1,0,0,0,3,289,1,0,0,0,
	5,293,1,0,0,0,7,297,1,0,0,0,9,301,1,0,0,0,11,305,1,0,0,0,13,309,1,0,0,0,
	15,314,1,0,0,0,17,321,1,0,0,0,19,329,1,0,0,0,21,334,1,0,0,0,23,344,1,0,
	0,0,25,353,1,0,0,0,27,359,1,0,0,0,29,367,1,0,0,0,31,374,1,0,0,0,33,383,
	1,0,0,0,35,387,1,0,0,0,37,391,1,0,0,0,39,397,1,0,0,0,41,404,1,0,0,0,43,
	407,1,0,0,0,45,412,1,0,0,0,47,419,1,0,0,0,49,424,1,0,0,0,51,428,1,0,0,0,
	53,431,1,0,0,0,55,437,1,0,0,0,57,443,1,0,0,0,59,447,1,0,0,0,61,453,1,0,
	0,0,63,461,1,0,0,0,65,466,1,0,0,0,67,472,1,0,0,0,69,479,1,0,0,0,71,490,
	1,0,0,0,73,493,1,0,0,0,75,496,1,0,0,0,77,498,1,0,0,0,79,500,1,0,0,0,81,
	502,1,0,0,0,83,504,1,0,0,0,85,506,1,0,0,0,87,508,1,0,0,0,89,511,1,0,0,0,
	91,513,1,0,0,0,93,515,1,0,0,0,95,518,1,0,0,0,97,521,1,0,0,0,99,524,1,0,
	0,0,101,527,1,0,0,0,103,529,1,0,0,0,105,532,1,0,0,0,107,535,1,0,0,0,109,
	537,1,0,0,0,111,539,1,0,0,0,113,541,1,0,0,0,115,543,1,0,0,0,117,545,1,0,
	0,0,119,547,1,0,0,0,121,550,1,0,0,0,123,553,1,0,0,0,125,555,1,0,0,0,127,
	557,1,0,0,0,129,559,1,0,0,0,131,561,1,0,0,0,133,563,1,0,0,0,135,565,1,0,
	0,0,137,567,1,0,0,0,139,569,1,0,0,0,141,571,1,0,0,0,143,573,1,0,0,0,145,
	576,1,0,0,0,147,579,1,0,0,0,149,583,1,0,0,0,151,585,1,0,0,0,153,588,1,0,
	0,0,155,591,1,0,0,0,157,594,1,0,0,0,159,597,1,0,0,0,161,600,1,0,0,0,163,
	603,1,0,0,0,165,606,1,0,0,0,167,609,1,0,0,0,169,613,1,0,0,0,171,617,1,0,
	0,0,173,626,1,0,0,0,175,628,1,0,0,0,177,632,1,0,0,0,179,636,1,0,0,0,181,
	640,1,0,0,0,183,644,1,0,0,0,185,656,1,0,0,0,187,658,1,0,0,0,189,667,1,0,
	0,0,191,669,1,0,0,0,193,672,1,0,0,0,195,678,1,0,0,0,197,681,1,0,0,0,199,
	685,1,0,0,0,201,689,1,0,0,0,203,696,1,0,0,0,205,699,1,0,0,0,207,705,1,0,
	0,0,209,707,1,0,0,0,211,713,1,0,0,0,213,720,1,0,0,0,215,723,1,0,0,0,217,
	729,1,0,0,0,219,731,1,0,0,0,221,735,1,0,0,0,223,742,1,0,0,0,225,745,1,0,
	0,0,227,751,1,0,0,0,229,755,1,0,0,0,231,784,1,0,0,0,233,786,1,0,0,0,235,
	789,1,0,0,0,237,792,1,0,0,0,239,796,1,0,0,0,241,798,1,0,0,0,243,800,1,0,
	0,0,245,816,1,0,0,0,247,818,1,0,0,0,249,821,1,0,0,0,251,832,1,0,0,0,253,
	842,1,0,0,0,255,844,1,0,0,0,257,846,1,0,0,0,259,853,1,0,0,0,261,859,1,0,
	0,0,263,865,1,0,0,0,265,878,1,0,0,0,267,880,1,0,0,0,269,882,1,0,0,0,271,
	893,1,0,0,0,273,898,1,0,0,0,275,905,1,0,0,0,277,907,1,0,0,0,279,910,1,0,
	0,0,281,916,1,0,0,0,283,930,1,0,0,0,285,286,5,105,0,0,286,287,5,51,0,0,
	287,288,5,50,0,0,288,2,1,0,0,0,289,290,5,105,0,0,290,291,5,54,0,0,291,292,
	5,52,0,0,292,4,1,0,0,0,293,294,5,117,0,0,294,295,5,51,0,0,295,296,5,50,
	0,0,296,6,1,0,0,0,297,298,5,117,0,0,298,299,5,54,0,0,299,300,5,52,0,0,300,
	8,1,0,0,0,301,302,5,102,0,0,302,303,5,51,0,0,303,304,5,50,0,0,304,10,1,
	0,0,0,305,306,5,102,0,0,306,307,5,54,0,0,307,308,5,52,0,0,308,12,1,0,0,
	0,309,310,5,118,0,0,310,311,5,49,0,0,311,312,5,50,0,0,312,313,5,56,0,0,
	313,14,1,0,0,0,314,315,5,115,0,0,315,316,5,116,0,0,316,317,5,114,0,0,317,
	318,5,105,0,0,318,319,5,110,0,0,319,320,5,103,0,0,320,16,1,0,0,0,321,322,
	5,98,0,0,322,323,5,111,0,0,323,324,5,111,0,0,324,325,5,108,0,0,325,326,
	5,101,0,0,326,327,5,97,0,0,327,328,5,110,0,0,328,18,1,0,0,0,329,330,5,118,
	0,0,330,331,5,111,0,0,331,332,5,105,0,0,332,333,5,100,0,0,333,20,1,0,0,
	0,334,335,5,97,0,0,335,336,5,116,0,0,336,337,5,116,0,0,337,338,5,114,0,
	0,338,339,5,105,0,0,339,340,5,98,0,0,340,341,5,117,0,0,341,342,5,116,0,
	0,342,343,5,101,0,0,343,22,1,0,0,0,344,345,5,97,0,0,345,346,5,98,0,0,346,
	347,5,115,0,0,347,348,5,116,0,0,348,349,5,114,0,0,349,350,5,97,0,0,350,
	351,5,99,0,0,351,352,5,116,0,0,352,24,1,0,0,0,353,354,5,99,0,0,354,355,
	5,108,0,0,355,356,5,97,0,0,356,357,5,115,0,0,357,358,5,115,0,0,358,26,1,
	0,0,0,359,360,5,101,0,0,360,361,5,120,0,0,361,362,5,116,0,0,362,363,5,101,
	0,0,363,364,5,110,0,0,364,365,5,100,0,0,365,366,5,115,0,0,366,28,1,0,0,
	0,367,368,5,115,0,0,368,369,5,116,0,0,369,370,5,97,0,0,370,371,5,116,0,
	0,371,372,5,105,0,0,372,373,5,99,0,0,373,30,1,0,0,0,374,375,5,102,0,0,375,
	376,5,117,0,0,376,377,5,110,0,0,377,378,5,99,0,0,378,379,5,116,0,0,379,
	380,5,105,0,0,380,381,5,111,0,0,381,382,5,110,0,0,382,32,1,0,0,0,383,384,
	5,108,0,0,384,385,5,101,0,0,385,386,5,116,0,0,386,34,1,0,0,0,387,388,5,
	110,0,0,388,389,5,101,0,0,389,390,5,119,0,0,390,36,1,0,0,0,391,392,5,99,
	0,0,392,393,5,111,0,0,393,394,5,110,0,0,394,395,5,115,0,0,395,396,5,116,
	0,0,396,38,1,0,0,0,397,398,5,114,0,0,398,399,5,101,0,0,399,400,5,116,0,
	0,400,401,5,117,0,0,401,402,5,114,0,0,402,403,5,110,0,0,403,40,1,0,0,0,
	404,405,5,105,0,0,405,406,5,102,0,0,406,42,1,0,0,0,407,408,5,101,0,0,408,
	409,5,108,0,0,409,410,5,115,0,0,410,411,5,101,0,0,411,44,1,0,0,0,412,413,
	5,115,0,0,413,414,5,119,0,0,414,415,5,105,0,0,415,416,5,116,0,0,416,417,
	5,99,0,0,417,418,5,104,0,0,418,46,1,0,0,0,419,420,5,99,0,0,420,421,5,97,
	0,0,421,422,5,115,0,0,422,423,5,101,0,0,423,48,1,0,0,0,424,425,5,102,0,
	0,425,426,5,111,0,0,426,427,5,114,0,0,427,50,1,0,0,0,428,429,5,100,0,0,
	429,430,5,111,0,0,430,52,1,0,0,0,431,432,5,119,0,0,432,433,5,104,0,0,433,
	434,5,105,0,0,434,435,5,108,0,0,435,436,5,101,0,0,436,54,1,0,0,0,437,438,
	5,98,0,0,438,439,5,114,0,0,439,440,5,101,0,0,440,441,5,97,0,0,441,442,5,
	107,0,0,442,56,1,0,0,0,443,444,5,116,0,0,444,445,5,114,0,0,445,446,5,121,
	0,0,446,58,1,0,0,0,447,448,5,99,0,0,448,449,5,97,0,0,449,450,5,116,0,0,
	450,451,5,99,0,0,451,452,5,104,0,0,452,60,1,0,0,0,453,454,5,102,0,0,454,
	455,5,105,0,0,455,456,5,110,0,0,456,457,5,97,0,0,457,458,5,108,0,0,458,
	459,5,108,0,0,459,460,5,121,0,0,460,62,1,0,0,0,461,462,5,116,0,0,462,463,
	5,104,0,0,463,464,5,105,0,0,464,465,5,115,0,0,465,64,1,0,0,0,466,467,5,
	115,0,0,467,468,5,117,0,0,468,469,5,112,0,0,469,470,5,101,0,0,470,471,5,
	114,0,0,471,66,1,0,0,0,472,473,5,116,0,0,473,474,5,121,0,0,474,475,5,112,
	0,0,475,476,5,101,0,0,476,477,5,111,0,0,477,478,5,102,0,0,478,68,1,0,0,
	0,479,480,5,105,0,0,480,481,5,110,0,0,481,482,5,115,0,0,482,483,5,116,0,
	0,483,484,5,97,0,0,484,485,5,110,0,0,485,486,5,99,0,0,486,487,5,101,0,0,
	487,488,5,111,0,0,488,489,5,102,0,0,489,70,1,0,0,0,490,491,5,105,0,0,491,
	492,5,110,0,0,492,72,1,0,0,0,493,494,5,97,0,0,494,495,5,115,0,0,495,74,
	1,0,0,0,496,497,5,40,0,0,497,76,1,0,0,0,498,499,5,41,0,0,499,78,1,0,0,0,
	500,501,5,91,0,0,501,80,1,0,0,0,502,503,5,93,0,0,503,82,1,0,0,0,504,505,
	5,123,0,0,505,84,1,0,0,0,506,507,5,125,0,0,507,86,1,0,0,0,508,509,5,61,
	0,0,509,510,5,62,0,0,510,88,1,0,0,0,511,512,5,62,0,0,512,90,1,0,0,0,513,
	514,5,60,0,0,514,92,1,0,0,0,515,516,5,60,0,0,516,517,5,61,0,0,517,94,1,
	0,0,0,518,519,5,62,0,0,519,520,5,61,0,0,520,96,1,0,0,0,521,522,5,61,0,0,
	522,523,5,61,0,0,523,98,1,0,0,0,524,525,5,33,0,0,525,526,5,61,0,0,526,100,
	1,0,0,0,527,528,5,33,0,0,528,102,1,0,0,0,529,530,5,38,0,0,530,531,5,38,
	0,0,531,104,1,0,0,0,532,533,5,124,0,0,533,534,5,124,0,0,534,106,1,0,0,0,
	535,536,5,63,0,0,536,108,1,0,0,0,537,538,5,59,0,0,538,110,1,0,0,0,539,540,
	5,58,0,0,540,112,1,0,0,0,541,542,5,44,0,0,542,114,1,0,0,0,543,544,5,46,
	0,0,544,116,1,0,0,0,545,546,5,64,0,0,546,118,1,0,0,0,547,548,5,43,0,0,548,
	549,5,43,0,0,549,120,1,0,0,0,550,551,5,45,0,0,551,552,5,45,0,0,552,122,
	1,0,0,0,553,554,5,43,0,0,554,124,1,0,0,0,555,556,5,45,0,0,556,126,1,0,0,
	0,557,558,5,42,0,0,558,128,1,0,0,0,559,560,5,47,0,0,560,130,1,0,0,0,561,
	562,5,92,0,0,562,132,1,0,0,0,563,564,5,37,0,0,564,134,1,0,0,0,565,566,5,
	94,0,0,566,136,1,0,0,0,567,568,5,126,0,0,568,138,1,0,0,0,569,570,5,38,0,
	0,570,140,1,0,0,0,571,572,5,124,0,0,572,142,1,0,0,0,573,574,5,60,0,0,574,
	575,5,60,0,0,575,144,1,0,0,0,576,577,5,62,0,0,577,578,5,62,0,0,578,146,
	1,0,0,0,579,580,5,62,0,0,580,581,5,62,0,0,581,582,5,62,0,0,582,148,1,0,
	0,0,583,584,5,61,0,0,584,150,1,0,0,0,585,586,5,43,0,0,586,587,5,61,0,0,
	587,152,1,0,0,0,588,589,5,45,0,0,589,590,5,61,0,0,590,154,1,0,0,0,591,592,
	5,42,0,0,592,593,5,61,0,0,593,156,1,0,0,0,594,595,5,47,0,0,595,596,5,61,
	0,0,596,158,1,0,0,0,597,598,5,38,0,0,598,599,5,61,0,0,599,160,1,0,0,0,600,
	601,5,124,0,0,601,602,5,61,0,0,602,162,1,0,0,0,603,604,5,94,0,0,604,605,
	5,61,0,0,605,164,1,0,0,0,606,607,5,37,0,0,607,608,5,61,0,0,608,166,1,0,
	0,0,609,610,5,60,0,0,610,611,5,60,0,0,611,612,5,61,0,0,612,168,1,0,0,0,
	613,614,5,62,0,0,614,615,5,62,0,0,615,616,5,61,0,0,616,170,1,0,0,0,617,
	618,5,62,0,0,618,619,5,62,0,0,619,620,5,62,0,0,620,621,5,61,0,0,621,172,
	1,0,0,0,622,627,3,175,87,0,623,627,3,177,88,0,624,627,3,179,89,0,625,627,
	3,181,90,0,626,622,1,0,0,0,626,623,1,0,0,0,626,624,1,0,0,0,626,625,1,0,
	0,0,627,174,1,0,0,0,628,630,3,185,92,0,629,631,3,183,91,0,630,629,1,0,0,
	0,630,631,1,0,0,0,631,176,1,0,0,0,632,634,3,199,99,0,633,635,3,183,91,0,
	634,633,1,0,0,0,634,635,1,0,0,0,635,178,1,0,0,0,636,638,3,209,104,0,637,
	639,3,183,91,0,638,637,1,0,0,0,638,639,1,0,0,0,639,180,1,0,0,0,640,642,
	3,219,109,0,641,643,3,183,91,0,642,641,1,0,0,0,642,643,1,0,0,0,643,182,
	1,0,0,0,644,645,7,0,0,0,645,184,1,0,0,0,646,657,5,48,0,0,647,654,3,191,
	95,0,648,650,3,187,93,0,649,648,1,0,0,0,649,650,1,0,0,0,650,655,1,0,0,0,
	651,652,3,197,98,0,652,653,3,187,93,0,653,655,1,0,0,0,654,649,1,0,0,0,654,
	651,1,0,0,0,655,657,1,0,0,0,656,646,1,0,0,0,656,647,1,0,0,0,657,186,1,0,
	0,0,658,663,3,189,94,0,659,661,3,193,96,0,660,659,1,0,0,0,660,661,1,0,0,
	0,661,662,1,0,0,0,662,664,3,189,94,0,663,660,1,0,0,0,663,664,1,0,0,0,664,
	188,1,0,0,0,665,668,5,48,0,0,666,668,3,191,95,0,667,665,1,0,0,0,667,666,
	1,0,0,0,668,190,1,0,0,0,669,670,7,1,0,0,670,192,1,0,0,0,671,673,3,195,97,
	0,672,671,1,0,0,0,673,674,1,0,0,0,674,672,1,0,0,0,674,675,1,0,0,0,675,194,
	1,0,0,0,676,679,3,189,94,0,677,679,5,95,0,0,678,676,1,0,0,0,678,677,1,0,
	0,0,679,196,1,0,0,0,680,682,5,95,0,0,681,680,1,0,0,0,682,683,1,0,0,0,683,
	681,1,0,0,0,683,684,1,0,0,0,684,198,1,0,0,0,685,686,5,48,0,0,686,687,7,
	2,0,0,687,688,3,201,100,0,688,200,1,0,0,0,689,694,3,203,101,0,690,692,3,
	205,102,0,691,690,1,0,0,0,691,692,1,0,0,0,692,693,1,0,0,0,693,695,3,203,
	101,0,694,691,1,0,0,0,694,695,1,0,0,0,695,202,1,0,0,0,696,697,7,3,0,0,697,
	204,1,0,0,0,698,700,3,207,103,0,699,698,1,0,0,0,700,701,1,0,0,0,701,699,
	1,0,0,0,701,702,1,0,0,0,702,206,1,0,0,0,703,706,3,203,101,0,704,706,5,95,
	0,0,705,703,1,0,0,0,705,704,1,0,0,0,706,208,1,0,0,0,707,709,5,48,0,0,708,
	710,3,197,98,0,709,708,1,0,0,0,709,710,1,0,0,0,710,711,1,0,0,0,711,712,
	3,211,105,0,712,210,1,0,0,0,713,718,3,213,106,0,714,716,3,215,107,0,715,
	714,1,0,0,0,715,716,1,0,0,0,716,717,1,0,0,0,717,719,3,213,106,0,718,715,
	1,0,0,0,718,719,1,0,0,0,719,212,1,0,0,0,720,721,7,4,0,0,721,214,1,0,0,0,
	722,724,3,217,108,0,723,722,1,0,0,0,724,725,1,0,0,0,725,723,1,0,0,0,725,
	726,1,0,0,0,726,216,1,0,0,0,727,730,3,213,106,0,728,730,5,95,0,0,729,727,
	1,0,0,0,729,728,1,0,0,0,730,218,1,0,0,0,731,732,5,48,0,0,732,733,7,5,0,
	0,733,734,3,221,110,0,734,220,1,0,0,0,735,740,3,223,111,0,736,738,3,225,
	112,0,737,736,1,0,0,0,737,738,1,0,0,0,738,739,1,0,0,0,739,741,3,223,111,
	0,740,737,1,0,0,0,740,741,1,0,0,0,741,222,1,0,0,0,742,743,7,6,0,0,743,224,
	1,0,0,0,744,746,3,227,113,0,745,744,1,0,0,0,746,747,1,0,0,0,747,745,1,0,
	0,0,747,748,1,0,0,0,748,226,1,0,0,0,749,752,3,223,111,0,750,752,5,95,0,
	0,751,749,1,0,0,0,751,750,1,0,0,0,752,228,1,0,0,0,753,756,3,231,115,0,754,
	756,3,243,121,0,755,753,1,0,0,0,755,754,1,0,0,0,756,230,1,0,0,0,757,758,
	3,187,93,0,758,760,5,46,0,0,759,761,3,187,93,0,760,759,1,0,0,0,760,761,
	1,0,0,0,761,763,1,0,0,0,762,764,3,233,116,0,763,762,1,0,0,0,763,764,1,0,
	0,0,764,766,1,0,0,0,765,767,3,241,120,0,766,765,1,0,0,0,766,767,1,0,0,0,
	767,785,1,0,0,0,768,769,5,46,0,0,769,771,3,187,93,0,770,772,3,233,116,0,
	771,770,1,0,0,0,771,772,1,0,0,0,772,774,1,0,0,0,773,775,3,241,120,0,774,
	773,1,0,0,0,774,775,1,0,0,0,775,785,1,0,0,0,776,777,3,187,93,0,777,779,
	3,233,116,0,778,780,3,241,120,0,779,778,1,0,0,0,779,780,1,0,0,0,780,785,
	1,0,0,0,781,782,3,187,93,0,782,783,3,241,120,0,783,785,1,0,0,0,784,757,
	1,0,0,0,784,768,1,0,0,0,784,776,1,0,0,0,784,781,1,0,0,0,785,232,1,0,0,0,
	786,787,3,235,117,0,787,788,3,237,118,0,788,234,1,0,0,0,789,790,7,7,0,0,
	790,236,1,0,0,0,791,793,3,239,119,0,792,791,1,0,0,0,792,793,1,0,0,0,793,
	794,1,0,0,0,794,795,3,187,93,0,795,238,1,0,0,0,796,797,7,8,0,0,797,240,
	1,0,0,0,798,799,7,9,0,0,799,242,1,0,0,0,800,801,3,245,122,0,801,803,3,247,
	123,0,802,804,3,241,120,0,803,802,1,0,0,0,803,804,1,0,0,0,804,244,1,0,0,
	0,805,807,3,199,99,0,806,808,5,46,0,0,807,806,1,0,0,0,807,808,1,0,0,0,808,
	817,1,0,0,0,809,810,5,48,0,0,810,812,7,2,0,0,811,813,3,201,100,0,812,811,
	1,0,0,0,812,813,1,0,0,0,813,814,1,0,0,0,814,815,5,46,0,0,815,817,3,201,
	100,0,816,805,1,0,0,0,816,809,1,0,0,0,817,246,1,0,0,0,818,819,3,249,124,
	0,819,820,3,237,118,0,820,248,1,0,0,0,821,822,7,10,0,0,822,250,1,0,0,0,
	823,824,5,116,0,0,824,825,5,114,0,0,825,826,5,117,0,0,826,833,5,101,0,0,
	827,828,5,102,0,0,828,829,5,97,0,0,829,830,5,108,0,0,830,831,5,115,0,0,
	831,833,5,101,0,0,832,823,1,0,0,0,832,827,1,0,0,0,833,252,1,0,0,0,834,835,
	5,39,0,0,835,836,3,255,127,0,836,837,5,39,0,0,837,843,1,0,0,0,838,839,5,
	39,0,0,839,840,3,263,131,0,840,841,5,39,0,0,841,843,1,0,0,0,842,834,1,0,
	0,0,842,838,1,0,0,0,843,254,1,0,0,0,844,845,8,11,0,0,845,256,1,0,0,0,846,
	848,5,34,0,0,847,849,3,259,129,0,848,847,1,0,0,0,848,849,1,0,0,0,849,850,
	1,0,0,0,850,851,5,34,0,0,851,258,1,0,0,0,852,854,3,261,130,0,853,852,1,
	0,0,0,854,855,1,0,0,0,855,853,1,0,0,0,855,856,1,0,0,0,856,260,1,0,0,0,857,
	860,8,12,0,0,858,860,3,263,131,0,859,857,1,0,0,0,859,858,1,0,0,0,860,262,
	1,0,0,0,861,862,5,92,0,0,862,866,7,13,0,0,863,866,3,265,132,0,864,866,3,
	269,134,0,865,861,1,0,0,0,865,863,1,0,0,0,865,864,1,0,0,0,866,264,1,0,0,
	0,867,868,5,92,0,0,868,879,3,213,106,0,869,870,5,92,0,0,870,871,3,213,106,
	0,871,872,3,213,106,0,872,879,1,0,0,0,873,874,5,92,0,0,874,875,3,267,133,
	0,875,876,3,213,106,0,876,877,3,213,106,0,877,879,1,0,0,0,878,867,1,0,0,
	0,878,869,1,0,0,0,878,873,1,0,0,0,879,266,1,0,0,0,880,881,7,14,0,0,881,
	268,1,0,0,0,882,884,5,92,0,0,883,885,5,117,0,0,884,883,1,0,0,0,885,886,
	1,0,0,0,886,884,1,0,0,0,886,887,1,0,0,0,887,888,1,0,0,0,888,889,3,203,101,
	0,889,890,3,203,101,0,890,891,3,203,101,0,891,892,3,203,101,0,892,270,1,
	0,0,0,893,894,5,110,0,0,894,895,5,117,0,0,895,896,5,108,0,0,896,897,5,108,
	0,0,897,272,1,0,0,0,898,902,3,275,137,0,899,901,3,277,138,0,900,899,1,0,
	0,0,901,904,1,0,0,0,902,900,1,0,0,0,902,903,1,0,0,0,903,274,1,0,0,0,904,
	902,1,0,0,0,905,906,7,15,0,0,906,276,1,0,0,0,907,908,7,16,0,0,908,278,1,
	0,0,0,909,911,7,17,0,0,910,909,1,0,0,0,911,912,1,0,0,0,912,910,1,0,0,0,
	912,913,1,0,0,0,913,914,1,0,0,0,914,915,6,139,0,0,915,280,1,0,0,0,916,917,
	5,47,0,0,917,918,5,42,0,0,918,922,1,0,0,0,919,921,9,0,0,0,920,919,1,0,0,
	0,921,924,1,0,0,0,922,923,1,0,0,0,922,920,1,0,0,0,923,925,1,0,0,0,924,922,
	1,0,0,0,925,926,5,42,0,0,926,927,5,47,0,0,927,928,1,0,0,0,928,929,6,140,
	1,0,929,282,1,0,0,0,930,931,5,47,0,0,931,932,5,47,0,0,932,936,1,0,0,0,933,
	935,8,18,0,0,934,933,1,0,0,0,935,938,1,0,0,0,936,934,1,0,0,0,936,937,1,
	0,0,0,937,939,1,0,0,0,938,936,1,0,0,0,939,940,6,141,1,0,940,284,1,0,0,0,
	53,0,626,630,634,638,642,649,654,656,660,663,667,674,678,683,691,694,701,
	705,709,715,718,725,729,737,740,747,751,755,760,763,766,771,774,779,784,
	792,803,807,812,816,832,842,848,855,859,865,878,886,902,912,922,936,2,6,
	0,0,0,1,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ComposeLexer.__ATN) {
			ComposeLexer.__ATN = new ATNDeserializer().deserialize(ComposeLexer._serializedATN);
		}

		return ComposeLexer.__ATN;
	}


	static DecisionsToDFA = ComposeLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}